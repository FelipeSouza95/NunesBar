package View;

import DAO.RelatorioDAO;
import Mode.GeradorCSV;
import Mode.Produtos;
import Mode.Relatorios;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FRelatorio extends javax.swing.JFrame {

    private ArrayList<Produtos> listaProdutos;
    private final RelatorioDAO relatorioDAO;
    private ArrayList<Relatorios> listaRelatorios;

    public FRelatorio() {
        initComponents();
        relatorioDAO = new RelatorioDAO();
        listaRelatorios = new ArrayList<>();
        initializeTable();
    }

    private void initializeTable() {
        // Definir as colunas da tabela
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nota");
        model.addColumn("Valor");
        model.addColumn("Data");

        // Preencher a tabela com os dados do banco de dados
        listaRelatorios = (ArrayList<Relatorios>) relatorioDAO.listarRelatorios();
        for (Relatorios relatorio : listaRelatorios) {
            Object[] row = {
                relatorio.getIdrelatorio(),
                relatorio.getNota(),
                relatorio.getValor(),
                relatorio.getData()
            };
            model.addRow(row);
        }

        // Definir o modelo da tabela com os dados
        jTRelatorio.setModel(model);
    }

    private void atualizarTabelaRelatorios() {
        // Limpar a tabela
        DefaultTableModel model = (DefaultTableModel) jTRelatorio.getModel();
        model.setRowCount(0);

        // Buscar relatórios do banco de dados
        listaRelatorios = (ArrayList<Relatorios>) relatorioDAO.listarRelatorios();

        // Preencher a tabela com os relatórios
        for (Relatorios relatorio : listaRelatorios) {
            Object[] row = {
                relatorio.getIdrelatorio(),
                relatorio.getNota(),
                relatorio.getValor(),
                relatorio.getData()
            };
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMenu = new javax.swing.JButton();
        txtValor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        Logo = new javax.swing.JLabel();
        NunesBar = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnCSV = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTRelatorio = new javax.swing.JTable();
        txtNota = new javax.swing.JTextField();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        btnMenu.setBackground(new java.awt.Color(255, 153, 0));
        btnMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMenu.setText("MENU");
        btnMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnMenu);
        btnMenu.setBounds(20, 10, 120, 40);

        txtValor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        getContentPane().add(txtValor);
        txtValor.setBounds(110, 250, 170, 40);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Data:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(320, 210, 80, 40);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Valor:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 250, 80, 40);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdicionar);
        btnAdicionar.setBounds(610, 250, 100, 40);

        btnDeletar.setText("Deletar");
        btnDeletar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeletar);
        btnDeletar.setBounds(720, 250, 100, 40);

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Logo.png"))); // NOI18N
        getContentPane().add(Logo);
        Logo.setBounds(300, -10, 320, 220);

        NunesBar.setFont(new java.awt.Font("Lucida Bright", 1, 48)); // NOI18N
        NunesBar.setForeground(new java.awt.Color(255, 255, 0));
        NunesBar.setText("NUNES BAR");
        getContentPane().add(NunesBar);
        NunesBar.setBounds(30, 60, 300, 70);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Nota:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 150, 80, 40);

        txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        getContentPane().add(txtData);
        txtData.setBounds(320, 250, 210, 40);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("Relatório Entrada/Saída");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(290, 10, 283, 40);

        btnCSV.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCSV.setText("GERADOR CSV");
        btnCSV.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSVActionPerformed(evt);
            }
        });
        jPanel1.add(btnCSV);
        btnCSV.setBounds(10, 10, 140, 40);

        jTRelatorio.setBackground(new java.awt.Color(102, 102, 102));
        jTRelatorio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTRelatorio.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTRelatorio.setForeground(new java.awt.Color(255, 255, 255));
        jTRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTRelatorio.setAlignmentX(2.0F);
        jTRelatorio.setAlignmentY(2.0F);
        jTRelatorio.setRowHeight(50);
        jScrollPane2.setViewportView(jTRelatorio);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(6, 62, 820, 350);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 310, 840, 430);

        txtNota.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        getContentPane().add(txtNota);
        txtNota.setBounds(30, 190, 250, 50);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/fundo.900x749.jpg"))); // NOI18N
        getContentPane().add(fundo);
        fundo.setBounds(0, 0, 900, 749);

        setSize(new java.awt.Dimension(916, 788));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        try {
            // Capturar os dados dos campos
            String nota = txtNota.getText().trim();
            double valor = Double.parseDouble(txtValor.getText().trim());
            Date data = new SimpleDateFormat("dd/MM/yyyy").parse(txtData.getText().trim());

            // Criar um novo objeto Relatorios com os dados capturados
            Relatorios relatorio = new Relatorios(nota, valor, data);

            // Inserir o relatório no banco de dados
            relatorioDAO.inserirRelatorio(relatorio);

            // Atualizar a tabela na interface gráfica
            atualizarTabelaRelatorios();

            // Limpar os campos após a adição
            limparCampos();

            JOptionPane.showMessageDialog(this, "Relatório adicionado com sucesso!");

        } catch (ParseException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao adicionar relatório: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        int selectedRowIndex = jTRelatorio.getSelectedRow();
        if (selectedRowIndex >= 0) {
            int id = (int) jTRelatorio.getValueAt(selectedRowIndex, 0);
            relatorioDAO.deletarRelatorio(id);
            atualizarTabelaRelatorios();
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

// Método auxiliar para limpar os campos após a adição de um relatório
    private void limparCampos() {
        txtNota.setText("");
        txtValor.setText("");
        txtData.setValue(null); // Limpa o campo de data
    }

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        FMenu menu = new FMenu(listaProdutos);
        this.dispose();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);

    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSVActionPerformed
        // Capturar índices das linhas selecionadas na tabela
        int[] selectedRows = jTRelatorio.getSelectedRows();

        // Verificar se há linhas selecionadas
        if (selectedRows.length > 0) {
            // Criar uma lista temporária para armazenar os dados selecionados
            ArrayList<Relatorios> relatoriosSelecionados = new ArrayList<>();

            // Iterar sobre os índices das linhas selecionadas
            for (int row : selectedRows) {
                // Obter dados da linha selecionada na tabela
                String nota = (String) jTRelatorio.getValueAt(row, 1);
                double valor = (double) jTRelatorio.getValueAt(row, 2);
                Date data = (Date) jTRelatorio.getValueAt(row, 3);

                // Criar um objeto Relatorios com os dados da linha selecionada
                Relatorios relatorio = new Relatorios(nota, valor, data);
                relatoriosSelecionados.add(relatorio);
            }

            // Cria o gerador CSV e gera o arquivo com os dados selecionados
            GeradorCSV geradorCSV = new GeradorCSV();
            geradorCSV.gerarCSV(relatoriosSelecionados);

            // Mensagem de sucesso
            JOptionPane.showMessageDialog(this, "Arquivo CSV gerado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Selecione pelo menos uma linha para gerar o CSV.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCSVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRelatorio().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel NunesBar;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCSV;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JLabel fundo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTRelatorio;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtNota;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
