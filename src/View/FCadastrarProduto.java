package View;

import DAO.ProdutoDAO;
import Mode.Produtos;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class FCadastrarProduto extends javax.swing.JFrame {

    private ArrayList<Produtos> listaProdutos = new ArrayList<>();
    private ProdutoDAO produtoDAO;

    public FCadastrarProduto() {
        initComponents();
        produtoDAO = new ProdutoDAO();
        try {
            // Carrega os produtos do banco de dados para a lista
            listaProdutos.addAll(produtoDAO.listarProdutos());

            // Inicializa a tabela com os produtos carregados
            initializeTable();

        } catch (SQLException e) {
            System.err.println("Erro ao carregar produtos do banco de dados: " + e.getMessage());
        }

        // Adiciona o MouseListener à tabela
        jTProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int indiceSelecionado = jTProdutos.getSelectedRow();
                if (indiceSelecionado != -1) {
                    // Preenche os campos com os dados do produto selecionado
                    txtNome.setText(listaProdutos.get(indiceSelecionado).getNome());
                    txtValor.setText(String.valueOf(listaProdutos.get(indiceSelecionado).getValor()));
                    txtQuantidade.setText(String.valueOf(listaProdutos.get(indiceSelecionado).getQuantidade()));
                    boxCategoria.setSelectedItem(listaProdutos.get(indiceSelecionado).getCategoria());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        boxCategoria = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        NunesBar = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAlterar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProdutos = new javax.swing.JTable();
        btnMenu = new javax.swing.JButton();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Quantidade:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(300, 210, 150, 40);

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        getContentPane().add(txtNome);
        txtNome.setBounds(30, 200, 250, 40);

        txtValor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        getContentPane().add(txtValor);
        txtValor.setBounds(110, 250, 170, 40);

        txtQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        getContentPane().add(txtQuantidade);
        txtQuantidade.setBounds(300, 250, 100, 40);

        boxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a Categoria...", "Bebidas", "Bebidas Alcoólicas", "Porções", "Biscoitos", "Balas e Doces", "Outros" }));
        getContentPane().add(boxCategoria);
        boxCategoria.setBounds(460, 250, 210, 40);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Categoria:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(460, 210, 120, 40);

        NunesBar.setFont(new java.awt.Font("Lucida Bright", 1, 48)); // NOI18N
        NunesBar.setForeground(new java.awt.Color(255, 255, 0));
        NunesBar.setText("NUNES BAR");
        getContentPane().add(NunesBar);
        NunesBar.setBounds(30, 60, 300, 70);

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Logo.png"))); // NOI18N
        getContentPane().add(Logo);
        Logo.setBounds(290, 0, 320, 220);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Valor:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 250, 80, 40);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Produto:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 160, 120, 40);

        btnAlterar.setText("Alterar");
        btnAlterar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar);
        btnAlterar.setBounds(680, 150, 100, 40);

        btnDeletar.setText("Deletar");
        btnDeletar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeletar);
        btnDeletar.setBounds(680, 200, 100, 40);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdicionar);
        btnAdicionar.setBounds(680, 250, 100, 40);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("Produtos Cadastrados");

        jTProdutos.setBackground(new java.awt.Color(102, 102, 102));
        jTProdutos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTProdutos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTProdutos.setForeground(new java.awt.Color(255, 255, 255));
        jTProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTProdutos.setAlignmentX(2.0F);
        jTProdutos.setAlignmentY(2.0F);
        jTProdutos.setRowHeight(50);
        jScrollPane1.setViewportView(jTProdutos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 310, 840, 430);

        btnMenu.setBackground(new java.awt.Color(255, 153, 0));
        btnMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMenu.setText("MENU");
        btnMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnMenu);
        btnMenu.setBounds(20, 10, 120, 40);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/fundo.900x749.jpg"))); // NOI18N
        getContentPane().add(fundo);
        fundo.setBounds(0, 0, 900, 749);

        setSize(new java.awt.Dimension(916, 788));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        String nome = txtNome.getText().trim();
        String valorText = txtValor.getText().trim();
        String quantidadeText = txtQuantidade.getText().trim();
        String categoria = boxCategoria.getSelectedItem().toString();

        if (nome.isEmpty() || valorText.isEmpty() || quantidadeText.isEmpty() || categoria.equals("Selecione a Categoria...")) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            double valor = Double.parseDouble(valorText);
            int quantidade = Integer.parseInt(quantidadeText);

            Produtos novoProduto = new Produtos(nome, categoria, valor, quantidade);

            produtoDAO.cadastrarProduto(novoProduto);

            JOptionPane.showMessageDialog(null, "Produto adicionado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            limparCampos();
            listaProdutos.clear();
            listaProdutos.addAll(produtoDAO.listarProdutos());
            initializeTable();

        } catch (NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao adicionar produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // Atualiza a tabela quando a janela ganha foco
        try {
            listaProdutos.clear();
            listaProdutos.addAll(produtoDAO.listarProdutos());
            initializeTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar produtos do banco de dados: " + e.getMessage(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        int indiceSelecionado = jTProdutos.getSelectedRow();
        if (indiceSelecionado == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um produto para deletar!");
        } else {
            try {
                int idProduto = (int) jTProdutos.getValueAt(indiceSelecionado, 0);

                int option = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o produto?",
                        "Confirmação", JOptionPane.YES_NO_OPTION);

                if (option == JOptionPane.YES_OPTION) {
                    // Deletar o produto
                    produtoDAO.deletarProduto(idProduto);

                    // Limpar os campos ou redefinir o estado do formulário
                    limparCampos(); // Método para limpar os campos do formulário

                    // Atualizar a lista de produtos na tabela
                    listaProdutos.clear();
                    listaProdutos.addAll(produtoDAO.listarProdutos());
                    initializeTable();

                    JOptionPane.showMessageDialog(null, "Produto excluído com sucesso!", "Sucesso",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao excluir produto: " + e.getMessage(), "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        FMenu menu = new FMenu(listaProdutos); // Cria uma instância de FMenu passando a lista de produtos
        this.dispose();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int indiceSelecionado = jTProdutos.getSelectedRow();
        if (indiceSelecionado == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um produto para alterar!");
        } else {
            try {
                int idProduto = (int) jTProdutos.getValueAt(indiceSelecionado, 0);
                Produtos produtoSelecionado = listaProdutos.stream()
                        .filter(p -> p.getIdproduto() == idProduto)
                        .findFirst()
                        .orElse(null);

                if (produtoSelecionado != null) {
                    double novoValor = Double.parseDouble(txtValor.getText().trim());
                    int novaQuantidade = Integer.parseInt(txtQuantidade.getText().trim());
                    String novaCategoria = boxCategoria.getSelectedItem().toString();

                    produtoSelecionado.setValor(novoValor);
                    produtoSelecionado.setQuantidade(novaQuantidade);
                    produtoSelecionado.setCategoria(novaCategoria);

                    produtoDAO.atualizarProduto(produtoSelecionado);
                    produtoDAO.atualizarQuantidadeProduto(idProduto, novaQuantidade);

                    JOptionPane.showMessageDialog(null, "Produto alterado com sucesso!", "Sucesso",
                            JOptionPane.INFORMATION_MESSAGE);

                    limparCampos();
                    listaProdutos.clear();
                    listaProdutos.addAll(produtoDAO.listarProdutos());
                    initializeTable();
                }
            } catch (NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao alterar produto: " + e.getMessage(), "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FCadastrarProduto().setVisible(true);
            }
        });
    }

    // Método para inicializar a tabela com os produtos
    private void initializeTable() {
        DefaultTableModel modeloP = new DefaultTableModel();
        modeloP.addColumn("ID");
        modeloP.addColumn("Nome");
        modeloP.addColumn("Categoria");
        modeloP.addColumn("Valor");
        modeloP.addColumn("Quantidade");

        for (Produtos produto : listaProdutos) {
            Object[] linha = {
                produto.getIdproduto(),
                produto.getNome(),
                produto.getCategoria(),
                produto.getValor(),
                produto.getQuantidade()
            };
            modeloP.addRow(linha);
        }

        jTProdutos.setModel(modeloP);
    }

    // Método para limpar os campos de texto
    private void limparCampos() {
        txtNome.setText("");
        txtValor.setText("");
        txtQuantidade.setText("");
        boxCategoria.setSelectedIndex(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel NunesBar;
    private javax.swing.JComboBox<String> boxCategoria;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JLabel fundo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTProdutos;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
